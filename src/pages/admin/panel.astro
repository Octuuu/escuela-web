---
import CommentCard from '../../components/CommentCard.astro';
import Layout from '../../layouts/Layout.astro';

let comentarios = [];

try {
  const res = await fetch('https://ifd-backend-production.up.railway.app/api/comments/inicio');
  comentarios = await res.json();
} catch (err) {
  console.error('Error al obtener comentarios:', err);
}

let proyectos=[]; 

try {
  const res = await fetch('https://ifd-backend-production.up.railway.app/api/proyectos');
  proyectos = await res.json();
} catch (err) {
  console.error('Error al obtener los proyectos:', err);
}
---

<Layout>
  

  <div class="max-w-3xl mx-auto mt-12 px-4">

    <h1 class="text-3xl font-semibold text-center text-white mb-8">Foro de Comentarios</h1>

    <div id="comentarioMensaje" class="hidden mb-6 px-4 py-3 rounded-lg text-center font-medium transition-all duration-300"></div>

    <div class="mt-10 space-y-6">
      {comentarios.length > 0 ? (
        comentarios.map((comentario) => (
          <div
            id={`comentario-${comentario.id}`}
            class="comentario flex justify-between items-center bg-white/5 border border-white/10 backdrop-blur-lg p-4 rounded-lg shadow-xl"
          >
            <CommentCard comentario={comentario} />
            <button
              class="btn-eliminar bg-red-600 hover:bg-red-700 text-white font-medium px-4 py-2 rounded-lg"
              data-id={comentario.id}
            >
              Eliminar
            </button>
          </div>
        ))
      ) : (
        <p class="text-center text-white/70">No hay comentarios aún.</p>
      )}
    </div>
  </div>

  <div class="max-w-5xl mx-auto mt-12 px-4">
    <!-- Modal de Confirmación -->
    <div id="modalConfirmacion" class="fixed inset-0 bg-black/50 items-center justify-center z-50 hidden">
      <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg max-w-sm w-full">
        <h2 class="text-lg font-semibold mb-4 text-center text-gray-800 dark:text-gray-100">¿Eliminar proyecto?</h2>
        <p class="text-sm text-gray-600 dark:text-gray-300 text-center mb-6">Esta acción no se puede deshacer.</p>
        <div class="flex justify-center gap-4">
          <button id="cancelarEliminar" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-medium px-4 py-2 rounded">Cancelar</button>
          <button id="confirmarEliminar" class="bg-red-500 hover:bg-red-600 text-white font-medium px-4 py-2 rounded">Eliminar</button>
        </div>
      </div>
    </div>

    <h1 class="text-3xl font-bold text-center text-white mb-8">Lista de Proyectos</h1>
    
    <div id="proyectoMensaje" class="hidden mb-6 px-4 py-3 rounded-lg text-center font-medium transition-all duration-300"></div>
  
    <div class="grid md:grid-cols-2 gap-6">
      {proyectos.length > 0 ? (
        proyectos.map((proyecto) => (
          <div
            id={`proyecto-${proyecto.id}`}
            class="bg-white/5 border border-white/10 backdrop-blur-lg p-6 rounded-lg shadow-xl relative"
          >
            <img
              src={`https://ifd-backend-production.up.railway.app/uploads/${proyecto.image}`}
              alt={proyecto.title}
              class="w-full h-48 object-cover rounded-lg mb-4"
            />
            <h2 class="text-xl font-semibold text-white">{proyecto.title}</h2>
            <p class="text-white/80 mb-3">{proyecto.description}</p>
            <a
              href={`https://ifd-backend-production.up.railway.app/uploads/${proyecto.pdf}`}
              target="_blank"
              class="text-blue-400 underline text-sm block mb-2"
            >Ver PDF</a>
  
            <button
              class="btn-eliminar-proyecto bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded-lg mt-2"
              data-id={proyecto.id}
            >
              Eliminar proyecto
            </button>

          </div>
        ))
      ) : (
        <p class="text-white text-center">No hay proyectos disponibles.</p>
      )}
    </div>
  </div>

  <!-- Script del navegador -->
  <script type="module">
    document.addEventListener('DOMContentLoaded', () => {
      const botones = document.querySelectorAll('.btn-eliminar');
      const mensajeBox = document.getElementById('comentarioMensaje');

      botones.forEach((btn) => {
        btn.addEventListener('click', async () => {
          const id = btn.dataset.id;
          try {
            const res = await fetch(`https://ifd-backend-production.up.railway.app/api/comments/${id}`, {
              method: 'DELETE',
            });

            if (res.ok) {
              const elemento = document.getElementById(`comentario-${id}`);
              if (elemento) elemento.remove();

              mensajeBox.textContent = 'Comentario eliminado correctamente.';
              mensajeBox.className = 'mb-6 px-4 py-3 rounded-lg text-center font-medium bg-green-100 text-green-800 border border-green-300';
              mensajeBox.classList.remove('hidden');
              setTimeout(() => mensajeBox.classList.add('hidden'), 4000);
            } else {
              mensajeBox.textContent = 'Error al eliminar el comentario.';
              mensajeBox.className = 'mb-6 px-4 py-3 rounded-lg text-center font-medium bg-red-100 text-red-800 border border-red-300';
              mensajeBox.classList.remove('hidden');
              setTimeout(() => mensajeBox.classList.add('hidden'), 4000);
            }
          } catch (err) {
            alert('Error de conexión con el servidor.');
          }
        });
      });
    });

    
    document.addEventListener('DOMContentLoaded', () => {
    const botones = document.querySelectorAll('.btn-eliminar-proyecto');
    const mensajeBox = document.getElementById('proyectoMensaje');
    const modal = document.getElementById('modalConfirmacion');
    const confirmarBtn = document.getElementById('confirmarEliminar');
    const cancelarBtn = document.getElementById('cancelarEliminar');

    let proyectoIdAEliminar = null;
    let tarjetaAEliminar = null;

    const mostrarMensaje = (texto, tipo = 'success') => {
      mensajeBox.textContent = texto;
      mensajeBox.className = `mb-6 px-4 py-3 rounded-lg text-center font-medium border transition-all duration-300 ${
        tipo === 'success'
          ? 'bg-green-100 text-green-800 border-green-300'
          : 'bg-red-100 text-red-800 border-red-300'
      }`;
      mensajeBox.classList.remove('hidden');
      setTimeout(() => mensajeBox.classList.add('hidden'), 4000);
    };

    botones.forEach((btn) => {
      btn.addEventListener('click', () => {
        proyectoIdAEliminar = btn.dataset.id;
        tarjetaAEliminar = document.getElementById(`proyecto-${proyectoIdAEliminar}`);
        modal.classList.remove('hidden');
      });
    });

    confirmarBtn.addEventListener('click', async () => {
      if (!proyectoIdAEliminar) return;

      try {
        const res = await fetch(`https://ifd-backend-production.up.railway.app/api/proyectos/${proyectoIdAEliminar}`, {
          method: 'DELETE'
        });

        if (res.ok) {
          if (tarjetaAEliminar) tarjetaAEliminar.remove();
          mostrarMensaje('Proyecto eliminado correctamente.');
        } else {
          mostrarMensaje('Error al eliminar el proyecto.', 'error');
        }
      } catch {
        mostrarMensaje('Error de conexión con el servidor.', 'error');
      }

      modal.classList.add('hidden');
      proyectoIdAEliminar = null;
      tarjetaAEliminar = null;
    });

    cancelarBtn.addEventListener('click', () => {
      modal.classList.add('hidden');
      proyectoIdAEliminar = null;
    });
  });


  </script>
</Layout>
